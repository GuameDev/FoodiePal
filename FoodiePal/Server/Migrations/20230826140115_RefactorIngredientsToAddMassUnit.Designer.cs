// <auto-generated />
using System;
using FoodiePal.Server.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FoodiePal.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230826140115_RefactorIngredientsToAddMassUnit")]
    partial class RefactorIngredientsToAddMassUnit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AuthorRecipe", b =>
                {
                    b.Property<int>("AuthorsId")
                        .HasColumnType("int");

                    b.Property<int>("RecipesId")
                        .HasColumnType("int");

                    b.HasKey("AuthorsId", "RecipesId");

                    b.HasIndex("RecipesId");

                    b.ToTable("AuthorRecipe");
                });

            modelBuilder.Entity("FoodiePal.Shared.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Madrid",
                            Country = "España",
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            FirstName = "Jorge",
                            LastName = "Díaz",
                            LastUpdateDate = new DateTime(2023, 8, 26, 16, 1, 15, 355, DateTimeKind.Local).AddTicks(9068),
                            Street = "Calle Valeriano Alcalá",
                            UserId = 1,
                            Visible = true,
                            Zip = "40521"
                        },
                        new
                        {
                            Id = 2,
                            City = "Madrid",
                            Country = "España",
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            FirstName = "María",
                            LastName = "Martínez",
                            LastUpdateDate = new DateTime(2023, 8, 26, 16, 1, 15, 355, DateTimeKind.Local).AddTicks(9073),
                            Street = "Calle Valeriano Alcalá",
                            UserId = 1,
                            Visible = true,
                            Zip = "40521"
                        },
                        new
                        {
                            Id = 3,
                            City = "Murcia",
                            Country = "España",
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            FirstName = "Natalia",
                            LastName = "Murillo",
                            LastUpdateDate = new DateTime(2023, 8, 26, 16, 1, 15, 355, DateTimeKind.Local).AddTicks(9076),
                            Street = "Calle Paco Palazón",
                            UserId = 2,
                            Visible = true,
                            Zip = "30256"
                        },
                        new
                        {
                            Id = 4,
                            City = "Murcia",
                            Country = "España",
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            FirstName = "César",
                            LastName = "Sánchez",
                            LastUpdateDate = new DateTime(2023, 8, 26, 16, 1, 15, 355, DateTimeKind.Local).AddTicks(9078),
                            Street = "Calle Paco Palazón",
                            UserId = 2,
                            Visible = true,
                            Zip = "30256"
                        });
                });

            modelBuilder.Entity("FoodiePal.Shared.Entities.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation",
                            Email = "Author1@fakeEmail.com",
                            LastUpdateDate = new DateTime(2023, 8, 26, 16, 1, 15, 355, DateTimeKind.Local).AddTicks(9169),
                            Name = "Áutor número 1",
                            Visible = true
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation",
                            Email = "Author2@fakeEmail.com",
                            LastUpdateDate = new DateTime(2023, 8, 26, 16, 1, 15, 355, DateTimeKind.Local).AddTicks(9173),
                            Name = "Áutor número 2",
                            Visible = true
                        });
                });

            modelBuilder.Entity("FoodiePal.Shared.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            LastUpdateDate = new DateTime(2023, 8, 26, 16, 1, 15, 355, DateTimeKind.Local).AddTicks(9148),
                            Name = "Breakfast",
                            Url = "breakfast",
                            Visible = true
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            LastUpdateDate = new DateTime(2023, 8, 26, 16, 1, 15, 355, DateTimeKind.Local).AddTicks(9151),
                            Name = "Meals",
                            Url = "meals",
                            Visible = true
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            LastUpdateDate = new DateTime(2023, 8, 26, 16, 1, 15, 355, DateTimeKind.Local).AddTicks(9153),
                            Name = "Dinner",
                            Url = "dinner",
                            Visible = true
                        });
                });

            modelBuilder.Entity("FoodiePal.Shared.Entities.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MassUnitId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("MassUnitId");

                    b.HasIndex("ProductId");

                    b.HasIndex("RecipeId");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            LastUpdateDate = new DateTime(2023, 8, 26, 16, 1, 15, 355, DateTimeKind.Local).AddTicks(9268),
                            MassUnitId = 1,
                            Name = "Avena",
                            ProductId = 1,
                            Quantity = 50.0,
                            RecipeId = 1,
                            Visible = true
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            LastUpdateDate = new DateTime(2023, 8, 26, 16, 1, 15, 355, DateTimeKind.Local).AddTicks(9272),
                            MassUnitId = 1,
                            Name = "Yogur griego",
                            ProductId = 2,
                            Quantity = 0.14999999999999999,
                            RecipeId = 1,
                            Visible = true
                        });
                });

            modelBuilder.Entity("FoodiePal.Shared.Entities.MassEquivalence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MassUnitEquivalentFactorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MassUnitParentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("MassEquivalences");
                });

            modelBuilder.Entity("FoodiePal.Shared.Entities.MassUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostFix")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("MassUnits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            LastUpdateDate = new DateTime(2023, 8, 26, 16, 1, 15, 355, DateTimeKind.Local).AddTicks(9229),
                            Name = "Miligramos",
                            PostFix = "mg",
                            Visible = true
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            LastUpdateDate = new DateTime(2023, 8, 26, 16, 1, 15, 355, DateTimeKind.Local).AddTicks(9232),
                            Name = "Centigramos",
                            PostFix = "cg",
                            Visible = true
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            LastUpdateDate = new DateTime(2023, 8, 26, 16, 1, 15, 355, DateTimeKind.Local).AddTicks(9235),
                            Name = "Gramos",
                            PostFix = "g",
                            Visible = true
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            LastUpdateDate = new DateTime(2023, 8, 26, 16, 1, 15, 355, DateTimeKind.Local).AddTicks(9237),
                            Name = "Kilogramos",
                            PostFix = "kg",
                            Visible = true
                        },
                        new
                        {
                            Id = 5,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            LastUpdateDate = new DateTime(2023, 8, 26, 16, 1, 15, 355, DateTimeKind.Local).AddTicks(9240),
                            Name = "Quintal",
                            PostFix = "q",
                            Visible = true
                        },
                        new
                        {
                            Id = 6,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            LastUpdateDate = new DateTime(2023, 8, 26, 16, 1, 15, 355, DateTimeKind.Local).AddTicks(9242),
                            Name = "Tonelada",
                            PostFix = "t",
                            Visible = true
                        },
                        new
                        {
                            Id = 7,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            LastUpdateDate = new DateTime(2023, 8, 26, 16, 1, 15, 355, DateTimeKind.Local).AddTicks(9245),
                            Name = "Onza",
                            PostFix = "oz",
                            Visible = true
                        },
                        new
                        {
                            Id = 8,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            LastUpdateDate = new DateTime(2023, 8, 26, 16, 1, 15, 355, DateTimeKind.Local).AddTicks(9247),
                            Name = "Libra",
                            PostFix = "lb",
                            Visible = true
                        },
                        new
                        {
                            Id = 9,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            LastUpdateDate = new DateTime(2023, 8, 26, 16, 1, 15, 355, DateTimeKind.Local).AddTicks(9250),
                            Name = "TableSpoon",
                            PostFix = "tbsp",
                            Visible = true
                        },
                        new
                        {
                            Id = 10,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            LastUpdateDate = new DateTime(2023, 8, 26, 16, 1, 15, 355, DateTimeKind.Local).AddTicks(9252),
                            Name = "TeaSpoon",
                            PostFix = "tsp",
                            Visible = true
                        });
                });

            modelBuilder.Entity("FoodiePal.Shared.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            LastUpdateDate = new DateTime(2023, 8, 26, 16, 1, 15, 355, DateTimeKind.Local).AddTicks(9190),
                            Name = "Avena",
                            ProductTypeId = 4,
                            Visible = true
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            LastUpdateDate = new DateTime(2023, 8, 26, 16, 1, 15, 355, DateTimeKind.Local).AddTicks(9193),
                            Name = "Yogur griego",
                            ProductTypeId = 3,
                            Visible = true
                        });
                });

            modelBuilder.Entity("FoodiePal.Shared.Entities.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ProductTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            LastUpdateDate = new DateTime(2023, 8, 26, 16, 1, 15, 355, DateTimeKind.Local).AddTicks(9207),
                            Name = "Verduras",
                            Visible = true
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            LastUpdateDate = new DateTime(2023, 8, 26, 16, 1, 15, 355, DateTimeKind.Local).AddTicks(9210),
                            Name = "Frutas",
                            Visible = true
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            LastUpdateDate = new DateTime(2023, 8, 26, 16, 1, 15, 355, DateTimeKind.Local).AddTicks(9212),
                            Name = "Yogur",
                            Visible = true
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            LastUpdateDate = new DateTime(2023, 8, 26, 16, 1, 15, 355, DateTimeKind.Local).AddTicks(9215),
                            Name = "Cereales",
                            Visible = true
                        });
                });

            modelBuilder.Entity("FoodiePal.Shared.Entities.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                            LastUpdateDate = new DateTime(2023, 8, 26, 16, 1, 15, 355, DateTimeKind.Local).AddTicks(9335),
                            Name = "Receta de prueba",
                            Visible = true
                        });
                });

            modelBuilder.Entity("FoodiePal.Shared.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            LastUpdateDate = new DateTime(2023, 8, 26, 16, 1, 15, 355, DateTimeKind.Local).AddTicks(8909),
                            Name = "Admin",
                            Visible = true
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            LastUpdateDate = new DateTime(2023, 8, 26, 16, 1, 15, 355, DateTimeKind.Local).AddTicks(8945),
                            Name = "Free",
                            Visible = true
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            LastUpdateDate = new DateTime(2023, 8, 26, 16, 1, 15, 355, DateTimeKind.Local).AddTicks(8947),
                            Name = "Premium",
                            Visible = true
                        });
                });

            modelBuilder.Entity("FoodiePal.Shared.Entities.Step", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("Steps");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "Coge un bol y echa 150 gramos de yogur griego",
                            LastUpdateDate = new DateTime(2023, 8, 26, 16, 1, 15, 355, DateTimeKind.Local).AddTicks(9313),
                            Name = "Destapa el yogur griego",
                            RecipeId = 1,
                            Visible = true
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "Echa 50 gramos de avena en el bol",
                            LastUpdateDate = new DateTime(2023, 8, 26, 16, 1, 15, 355, DateTimeKind.Local).AddTicks(9316),
                            Name = "Echa la avena",
                            RecipeId = 1,
                            Visible = true
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Description = "¡Remuevelo todo y prepárate para un desayuno lleno de energía!",
                            LastUpdateDate = new DateTime(2023, 8, 26, 16, 1, 15, 355, DateTimeKind.Local).AddTicks(9319),
                            Name = "¡A comer!",
                            RecipeId = 1,
                            Visible = true
                        });
                });

            modelBuilder.Entity("FoodiePal.Shared.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Email = "jorge.diaz@fakeMail.com",
                            FirstName = "Jorge",
                            LastName1 = "Díaz",
                            LastName2 = "González",
                            LastUpdateDate = new DateTime(2023, 8, 26, 16, 1, 15, 355, DateTimeKind.Local).AddTicks(9098),
                            PasswordHash = new byte[] { 49, 50, 51, 52, 53, 54, 55, 56, 57, 47, 97 },
                            PasswordSalt = new byte[] { 83, 97, 108, 116 },
                            RoleId = 1,
                            Visible = true
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Email = "natalia.murillo@fakeMail.com",
                            FirstName = "Natalia",
                            LastName1 = "Murillo",
                            LastName2 = "Palazón",
                            LastUpdateDate = new DateTime(2023, 8, 26, 16, 1, 15, 355, DateTimeKind.Local).AddTicks(9124),
                            PasswordHash = new byte[] { 55, 56, 57, 52, 53, 54, 49, 50, 51 },
                            PasswordSalt = new byte[] { 83, 97, 108, 116, 121 },
                            RoleId = 3,
                            Visible = true
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Email = "mar.casal@fakeMail.com",
                            FirstName = "Mar",
                            LastName1 = "Casal",
                            LastName2 = "Vilches",
                            LastUpdateDate = new DateTime(2023, 8, 26, 16, 1, 15, 355, DateTimeKind.Local).AddTicks(9129),
                            PasswordHash = new byte[] { 49, 50, 51, 52, 53, 54, 55, 56, 57, 47, 97 },
                            PasswordSalt = new byte[] { 70, 111, 111, 100, 105, 101, 80, 97, 108 },
                            RoleId = 2,
                            Visible = true
                        });
                });

            modelBuilder.Entity("MassEquivalenceMassUnit", b =>
                {
                    b.Property<int>("MassEquivalencesId")
                        .HasColumnType("int");

                    b.Property<int>("MassUnitsId")
                        .HasColumnType("int");

                    b.HasKey("MassEquivalencesId", "MassUnitsId");

                    b.HasIndex("MassUnitsId");

                    b.ToTable("MassEquivalenceMassUnit");
                });

            modelBuilder.Entity("AuthorRecipe", b =>
                {
                    b.HasOne("FoodiePal.Shared.Entities.Author", null)
                        .WithMany()
                        .HasForeignKey("AuthorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodiePal.Shared.Entities.Recipe", null)
                        .WithMany()
                        .HasForeignKey("RecipesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FoodiePal.Shared.Entities.Address", b =>
                {
                    b.HasOne("FoodiePal.Shared.Entities.User", null)
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FoodiePal.Shared.Entities.Ingredient", b =>
                {
                    b.HasOne("FoodiePal.Shared.Entities.MassUnit", "MassUnit")
                        .WithMany("Ingredients")
                        .HasForeignKey("MassUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodiePal.Shared.Entities.Product", "Product")
                        .WithMany("Ingredients")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodiePal.Shared.Entities.Recipe", "Recipe")
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MassUnit");

                    b.Navigation("Product");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("FoodiePal.Shared.Entities.Product", b =>
                {
                    b.HasOne("FoodiePal.Shared.Entities.ProductType", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("FoodiePal.Shared.Entities.Recipe", b =>
                {
                    b.HasOne("FoodiePal.Shared.Entities.Category", "Category")
                        .WithMany("Recipes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("FoodiePal.Shared.Entities.Step", b =>
                {
                    b.HasOne("FoodiePal.Shared.Entities.Recipe", "Recipe")
                        .WithMany("Steps")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("FoodiePal.Shared.Entities.User", b =>
                {
                    b.HasOne("FoodiePal.Shared.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("MassEquivalenceMassUnit", b =>
                {
                    b.HasOne("FoodiePal.Shared.Entities.MassEquivalence", null)
                        .WithMany()
                        .HasForeignKey("MassEquivalencesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodiePal.Shared.Entities.MassUnit", null)
                        .WithMany()
                        .HasForeignKey("MassUnitsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FoodiePal.Shared.Entities.Category", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("FoodiePal.Shared.Entities.MassUnit", b =>
                {
                    b.Navigation("Ingredients");
                });

            modelBuilder.Entity("FoodiePal.Shared.Entities.Product", b =>
                {
                    b.Navigation("Ingredients");
                });

            modelBuilder.Entity("FoodiePal.Shared.Entities.Recipe", b =>
                {
                    b.Navigation("Ingredients");

                    b.Navigation("Steps");
                });

            modelBuilder.Entity("FoodiePal.Shared.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("FoodiePal.Shared.Entities.User", b =>
                {
                    b.Navigation("Addresses");
                });
#pragma warning restore 612, 618
        }
    }
}
