// <auto-generated />
using System;
using FoodiePal.Server.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FoodiePal.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230821105808_SeedUsersData")]
    partial class SeedUsersData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FoodiePal.Shared.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Madrid",
                            Country = "España",
                            FirstName = "Jorge",
                            LastName = "Díaz",
                            Street = "Calle Valeriano Alcalá",
                            UserId = 1,
                            Zip = "40521"
                        },
                        new
                        {
                            Id = 2,
                            City = "Madrid",
                            Country = "España",
                            FirstName = "María",
                            LastName = "Martínez",
                            Street = "Calle Valeriano Alcalá",
                            UserId = 1,
                            Zip = "40521"
                        },
                        new
                        {
                            Id = 3,
                            City = "Murcia",
                            Country = "España",
                            FirstName = "Natalia",
                            LastName = "Murillo",
                            Street = "Calle Paco Palazón",
                            UserId = 2,
                            Zip = "30256"
                        },
                        new
                        {
                            Id = 4,
                            City = "Murcia",
                            Country = "España",
                            FirstName = "César",
                            LastName = "Sánchez",
                            Street = "Calle Paco Palazón",
                            UserId = 2,
                            Zip = "30256"
                        });
                });

            modelBuilder.Entity("FoodiePal.Shared.Entities.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Free"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Premium"
                        });
                });

            modelBuilder.Entity("FoodiePal.Shared.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2023, 8, 21, 12, 58, 7, 883, DateTimeKind.Local).AddTicks(2626),
                            Email = "jorge.diaz@fakeMail.com",
                            LastName1 = "Díaz",
                            LastName2 = "González",
                            Name = "Jorge",
                            PasswordHash = new byte[] { 49, 50, 51, 52, 53, 54, 55, 56, 57, 47, 97 },
                            PasswordSalt = new byte[] { 83, 97, 108, 116 },
                            RolId = 1
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2023, 8, 21, 12, 58, 7, 883, DateTimeKind.Local).AddTicks(2685),
                            Email = "natalia.murillo@fakeMail.com",
                            LastName1 = "Murillo",
                            LastName2 = "Palazón",
                            Name = "Natalia",
                            PasswordHash = new byte[] { 55, 56, 57, 52, 53, 54, 49, 50, 51 },
                            PasswordSalt = new byte[] { 83, 97, 108, 116, 121 },
                            RolId = 3
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2023, 8, 21, 12, 58, 7, 883, DateTimeKind.Local).AddTicks(2689),
                            Email = "mar.casal@fakeMail.com",
                            LastName1 = "Casal",
                            LastName2 = "Vilches",
                            Name = "Mar",
                            PasswordHash = new byte[] { 49, 50, 51, 52, 53, 54, 55, 56, 57, 47, 97 },
                            PasswordSalt = new byte[] { 70, 111, 111, 100, 105, 101, 80, 97, 108 },
                            RolId = 2
                        });
                });

            modelBuilder.Entity("FoodiePal.Shared.Entities.Address", b =>
                {
                    b.HasOne("FoodiePal.Shared.Entities.User", null)
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FoodiePal.Shared.Entities.User", b =>
                {
                    b.HasOne("FoodiePal.Shared.Entities.Rol", "Rol")
                        .WithMany("Users")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("FoodiePal.Shared.Entities.Rol", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("FoodiePal.Shared.Entities.User", b =>
                {
                    b.Navigation("Addresses");
                });
#pragma warning restore 612, 618
        }
    }
}
